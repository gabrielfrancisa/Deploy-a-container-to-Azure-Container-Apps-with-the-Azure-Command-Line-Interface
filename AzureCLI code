Create a resource group and prepare the Azure environment

Use the [>_] button to the right of the search bar at the top of the page to create a new cloud shell in the Azure portal, selecting a Bash environment. 
The cloud shell provides a command line interface in a pane at the bottom of the Azure portal. 
If you are prompted to select a storage account to persist your files, select No storage account required, your subscription, and then select Apply.


Create a resource group for the resources needed for this exercise. Replace myResourceGroup with a name you want to use for the resource group. You can replace eastus with a region near you if needed. If you already have a resource group you want to use, proceed to the next step.

In this MINI PROJECT, your Resource Group has already been created (myResourceGroup), and you may safely skip this step.

1.      AZURECLI CODE SECTION: Type: 
>>>>> az group create --location eastus --name myResourceGroup

(#Run the following command to ensure you have the latest version of the Azure Container Apps extension for the CLI is installed.)

2.     AZURECLI CODE SECTION: Type: 
>>>>> az extension add --name containerapp --upgrade

Register namespaces
(# two namespaces need to be registered for Azure Container Apps, and please make sure they are registered in the following steps. 
Each registration can take a few minutes to complete if they aren't already configured in your subscription.)

3.   Register the Microsoft.App namespace.
AZURECLI CODE SECTION: Type: 

>>>> az provider register --namespace Microsoft.App
(#Register the Microsoft.OperationalInsights provider for the Azure Monitor Log Analytics workspace if you haven't used it before.)

4.      AZURECLI CODE SECTION: Type: 
>>>>   az provider register --namespace Microsoft.OperationalInsights

Create an Azure Container Apps environment
An environment in Azure Container Apps creates a secure boundary around a group of container apps. 
Container Apps deployed to the same environment are deployed in the same virtual network and write logs to the same Log Analytics workspace.


5.     Create an environment with the az containerapp env create command. Replace myLocation with an Azure region near you. It takes a few minutes for the operation to complete.
AZURECLI CODE SECTION: Type: 

>>>>>   az containerapp env create \
          --name my-container-env \
           --resource-group myResourceGroup \
            --location myLocation
           Deploy a container app to the environment

(#After the container app environment finishes deploying, you can deploy a container image to your environment.)

6. AZURECLI CODE SECTION: Type: 
Deploy a sample app container image with the containerapp create command.

>>>>>>    az containerapp create \
           --name my-container-app \
             --resource-group myResourceGroup \
             --environment my-container-env \
             --image mcr.microsoft.com/azuredocs/containerapps-helloworld:latest \
    --target-port 80 \
    --ingress 'external' \
    --query properties.configuration.ingress.fqdn

By setting --ingress to external, you make the container app available to public requests. 

The command returns a link to access your app.




Clean up resources
Now that you finished the exercise, you should delete the cloud resources you created to avoid unnecessary resource usage.

In your browser navigate to the Azure portal https://portal.azure.com; signing in with your Azure credentials if prompted.
Navigate to the resource group you created and view the contents of the resources used in this exercise.
On the toolbar, select Delete resource group.
Enter the resource group name and confirm that you want to delete it.



Congratulations
You have successfully completed this lab. Click End to mark the lab as Complete.
